const assert = require('chai').assert;const data = require('../data/test.data');const locator = require('../data/locator');describe('Edit button', function () {    let isCancelBtnDis;    let isCancelBtnEdt;    let isDropInBarDis;    let isDropInBarEdt;    function goToCreataedBugReportPage(){        browser.url('/');        browser.waitForVisible(locator.loginPage.email, 2000);        browser.setValue(locator.loginPage.email, data.user.email);        browser.setValue(locator.loginPage.password, data.user.password);        browser.click(locator.loginPage.loginButton);        browser.waitForVisible(locator.bugReportEditMode.allIssuesBtn, 2000);        browser.click(locator.bugReportEditMode.allIssuesBtn);        browser.waitForExist('#summary');        $$('#summary')[0].click();        browser.waitForExist(locator.controlBarFunctionality.bugReportFormDisabled, 2000);    }    function switchToEdt(){        $(locator.controlBarFunctionality.editBtn).click();        browser.waitForVisible(locator.controlBarFunctionality.bugReportFormEdit,2000);    }    function switchToDisabled(){        $(locator.controlBarFunctionality.submitBtn).click();        browser.waitForVisible(locator.controlBarFunctionality.bugReportFormDisabled,2000);    }    it('Bug Report Form switches to Edit Mode after clicking the Edit button', function () {        goToCreataedBugReportPage();        let anyInputDis = browser.isExisting(locator.controlBarFunctionality.anyInput); // check if there are any inputs at Disabled Mode        let anyDropDis = browser.isExisting(locator.controlBarFunctionality.anyDropDown); // // check if there are any drop-downs at Disabled Mode        let textArDis = browser.isEnabled(locator.controlBarFunctionality.textAreaDis);// check if text area has a "disabled" tag        let boolenBefore = anyInputDis + anyDropDis + textArDis;   // combine 3 check points into one(it should be 0+0+0)        switchToEdt();        let anyInputEdt = browser.isExisting(locator.controlBarFunctionality.anyInput);        let anyDropEtd = browser.isExisting(locator.controlBarFunctionality.anyDropDown);        let textArEdt = browser.isEnabled(locator.controlBarFunctionality.textAreaEdt);        let boolenAfter = anyInputEdt + anyDropEtd + textArEdt;        assert.isTrue(boolenBefore == 0 && boolenAfter == 3, 'Bug Report Form does not switche to Edit Mode');    });    it('Cancel button becomes enabled after clicking the Edit button', function () {        switchToDisabled();        isCancelBtnDis = browser.isEnabled(locator.controlBarFunctionality.cancelBtnDis); // false if Cancel Button has a "disabled" tag        switchToEdt();        isCancelBtnEdt = browser.isEnabled(locator.controlBarFunctionality.cancelBtnEdit);        assert.isTrue(isCancelBtnDis == false && isCancelBtnEdt == true, 'Cancel Button is not changed to enabled state');    });    it('Status badge becomes a drop-down list after clicking the Edit button', function () {        switchToDisabled();        isDropInBarDis = browser.isExisting(locator.controlBarFunctionality.anyDropInControlBar); // check if there is a drop-down in table        switchToEdt();        isDropInBarEdt = browser.isExisting(locator.controlBarFunctionality.badgeDropDownEdt); // again check if there is a drop-down in table        assert.isTrue(isDropInBarDis==false && isDropInBarEdt==true, 'Status badge did not become a drop-down list');    });    it('Control Bar switches to Edit Mode after clicking the Edit button', function () {        assert.isTrue(isCancelBtnDis == false && isCancelBtnEdt == true && isDropInBarDis==false && isDropInBarEdt==true, 'Control Bar does not switch to Edit Mode');    });    it ('Edit button becomes Submit', function (){        switchToDisabled();        let editBtnName=browser.getText(locator.controlBarFunctionality.editBtn);        switchToEdt();        let submitBtnName=browser.getText(locator.controlBarFunctionality.submitBtn);        console.log(editBtnName,submitBtnName);        assert.isTrue(editBtnName==data.controlBarFunctionality.editButtonName && submitBtnName==data.controlBarFunctionality.submitButtonName, 'Edit button does not change the name for Submit')    })});